<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <context:annotation-config/>
    <context:property-placeholder location="classpath:database-config.properties"/>
    <!--DataSource configuration-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbcDriver}"/>
        <property name="jdbcUrl" value="${jdbcUrl}"/>
        <property name="user" value="${jdbcUserName}"/>
        <property name="password" value="${jdbcPassword}"/>
        <property name="initialPoolSize" value="${jdbcInitialPool}"/>
        <property name="maxPoolSize" value="${jdbcMaxPoolSize}"/>
        <property name="minPoolSize" value="${jdbcMinPoolSize}"/>
        <property name="maxStatements" value="${jdbcMaxStatements}"/>
        <property name="acquireIncrement" value="${jdbcAcquireIncrement}"/>
        <property name="maxIdleTime" value="${jdbcMaxIdleTime}"/>
        <property name="testConnectionOnCheckout" value="${jdbcTestConnection}"/>
    </bean>

    <!--  JPA entitymanager -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="am.aca.wftartproject" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>
        <property name="jpaProperties">
            <props>
                <!--<prop key="org.hibernate.flushMode">commit</prop>-->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
            </props>
        </property>
    </bean>

    <context:annotation-config/>
    <context:property-placeholder location="classpath:database-config.properties"/>


    <!--&lt;!&ndash; the transactional advice (what 'happens'; see the <aop:advisor/> ) &ndash;&gt;-->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
        <!--<tx:attributes>-->
            <!--&lt;!&ndash; all methods starting with 'list' or 'get' are read-only &ndash;&gt;-->
            <!--<tx:method name="list*" read-only="true"/>-->
            <!--<tx:method name="get*" read-only="true"/>-->
            <!--&lt;!&ndash; for other methods use the default transaction settings &ndash;&gt;-->
            <!--<tx:method name="*" />-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!--&lt;!&ndash; ensure that the above transactional advice runs for any execution-->
        <!--of a method in the service package &ndash;&gt;-->
    <!--<aop:config>-->
        <!--<aop:pointcut id="serviceMethods"-->
                      <!--expression="execution(* am.aca.wftartproject.service.impl.*.*(..))" />-->
        <!--<aop:advisor pointcut-ref="serviceMethods" advice-ref="txAdvice" />-->
    <!--</aop:config>-->

    <tx:annotation-driven transaction-manager="transactionManager" />

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <bean id="persistenceExceptionTranslationPostProcessor"
          class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

</beans>